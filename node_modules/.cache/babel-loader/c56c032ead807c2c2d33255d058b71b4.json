{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\Code\\\\ReactApp\\\\iplant\\\\src\\\\components\\\\Product\\\\index.jsx\";\nimport React from 'react';\nimport { plantList } from '../../data/plantList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Product() {\n  const products = plantList;\n  const categories = plantList.reduce((acc, plant) => acc.includes(plant.category) ? acc : acc.concat(plant.category), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(cat => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: product.name\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","plantList","Product","products","categories","reduce","acc","plant","includes","category","concat","map","cat","product","name","id"],"sources":["C:/Users/Utilisateur/Desktop/Code/ReactApp/iplant/src/components/Product/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport { plantList } from '../../data/plantList'\r\n\r\nfunction Product() {\r\n\r\n    const products = plantList;\r\n    const categories = plantList.reduce((acc, plant) => \r\n       acc.includes(plant.category) ? acc : acc.concat(plant.category), []\r\n    )\r\n\r\n  return (\r\n    <>\r\n        <ul>\r\n            {categories.map((cat) => {\r\n                return <li key={cat}>{cat}</li>\r\n            })}\r\n        </ul>\r\n        <ul>\r\n            {\r\n                products.map((product) => {\r\n                    return <li key={product.id}>{product.name}</li>\r\n                })\r\n            }\r\n        </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Product"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;;;AAEA,SAASC,OAAT,GAAmB;EAEf,MAAMC,QAAQ,GAAGF,SAAjB;EACA,MAAMG,UAAU,GAAGH,SAAS,CAACI,MAAV,CAAiB,CAACC,GAAD,EAAMC,KAAN,KACjCD,GAAG,CAACE,QAAJ,CAAaD,KAAK,CAACE,QAAnB,IAA+BH,GAA/B,GAAqCA,GAAG,CAACI,MAAJ,CAAWH,KAAK,CAACE,QAAjB,CADrB,EACiD,EADjD,CAAnB;EAIF,oBACE;IAAA,wBACI;MAAA,UACKL,UAAU,CAACO,GAAX,CAAgBC,GAAD,IAAS;QACrB,oBAAO;UAAA,UAAeA;QAAf,GAASA,GAAT;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAA,UAEQT,QAAQ,CAACQ,GAAT,CAAcE,OAAD,IAAa;QACtB,oBAAO;UAAA,UAAsBA,OAAO,CAACC;QAA9B,GAASD,OAAO,CAACE,EAAjB;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFD;IAFR;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA,gBADF;AAgBD;;KAvBQb,O;AAyBT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}